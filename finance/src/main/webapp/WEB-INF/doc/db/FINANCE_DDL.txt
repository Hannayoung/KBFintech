/*이화평이 추가한 내용*/
/* 이 DDL 명령문을 모두 실행하면, 시퀀스 및 테이블을 모두 삭제한뒤 새로 생성합니다. */

DROP SEQUENCE SEQ_PRODUCT;
DROP SEQUENCE SEQ_PLAN;

DROP TABLE M_PRODUCT;
DROP TABLE PRODUCT;
DROP TABLE PLAN_DETAIL;
DROP TABLE PLAN;
DROP TABLE PAYMENT;
DROP TABLE BUSINESS;
DROP TABLE M_CARD;
DROP TABLE MEMBER;

CREATE SEQUENCE SEQ_PRODUCT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PLAN START WITH 1 INCREMENT BY 1;


/* 회원 */
CREATE TABLE MEMBER (
	M_ID VARCHAR2(50) NOT NULL, /* 회원 아이디 */
	M_PW VARCHAR2(50) NOT NULL, /* 회원 비밀번호 */
	M_NAME VARCHAR2(50) NOT NULL, /* 회원 이름 */
	M_POINT NUMBER DEFAULT 0 /* 보유 포인트 */
);

COMMENT ON TABLE MEMBER IS '회원';

COMMENT ON COLUMN MEMBER.M_ID IS '회원 아이디';

COMMENT ON COLUMN MEMBER.M_PW IS '회원 비밀번호';

COMMENT ON COLUMN MEMBER.M_NAME IS '회원 이름';

COMMENT ON COLUMN MEMBER.M_POINT IS '보유 포인트';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		M_ID ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			M_ID
		);

/* 상품 */
CREATE TABLE PRODUCT (
	PR_ID VARCHAR2(50) NOT NULL, /* 상품 아이디 */
	PR_MIN_INTEREST VARCHAR2(50) DEFAULT '0', /* 기본 금리 */
	PR_MAX_INTEREST VARCHAR2(50) DEFAULT '0', /* 최고 금리 */
	PR_BANK VARCHAR2(50) NOT NULL, /* 은행 */
	PR_NAME VARCHAR2(50) NOT NULL /* 상품명 */
);

COMMENT ON TABLE PRODUCT IS '상품';

COMMENT ON COLUMN PRODUCT.PR_ID IS '상품 아이디';

COMMENT ON COLUMN PRODUCT.PR_MIN_INTEREST IS '기본 금리';

COMMENT ON COLUMN PRODUCT.PR_MAX_INTEREST IS '최고 금리';

COMMENT ON COLUMN PRODUCT.PR_BANK IS '은행';

COMMENT ON COLUMN PRODUCT.PR_NAME IS '상품명';

CREATE UNIQUE INDEX PK_PRODUCT
	ON PRODUCT (
		PR_ID ASC
	);

ALTER TABLE PRODUCT
	ADD
		CONSTRAINT PK_PRODUCT
		PRIMARY KEY (
			PR_ID
		);

/* 등록상품 */
CREATE TABLE M_PRODUCT (
	M_ID VARCHAR2(50), /* 회원 아이디 */
	PR_ID VARCHAR2(50) /* 상품 아이디 */
);

COMMENT ON TABLE M_PRODUCT IS '등록상품';

COMMENT ON COLUMN M_PRODUCT.M_ID IS '회원 아이디';

COMMENT ON COLUMN M_PRODUCT.PR_ID IS '상품 아이디';

/* 등록된 계좌 */
CREATE TABLE "FINANCE"."ACCOUNT" 
(   
	"M_ID" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
   "M_NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
   "ACCOUNT_NUMBER" NUMBER NOT NULL ENABLE, 
   "PHONE" NUMBER NOT NULL ENABLE, 
   "ACCOUNT_MONEY" NUMBER NOT NULL ENABLE, 
    CONSTRAINT "ACCOUNT" PRIMARY KEY ("ACCOUNT_NUMBER"),
    CONSTRAINT "FK_MEMBER_TO_ACCOUNT" FOREIGN KEY ("M_ID")
     REFERENCES "FINANCE"."MEMBER" ("M_ID") ENABLE
);
   

/* KB카드 */
CREATE TABLE K_CARD (
	K_ID VARCHAR2(50) NOT NULL, /* 카드 번호 */
	K_MM VARCHAR2(50) NOT NULL, /* 유효기간 월 */
	K_YY VARCHAR2(50) NOT NULL, /* 유효기간 연도 */
	K_CVC VARCHAR2(50) NOT NULL, /* CVC 번호 */
	K_COMPANY VARCHAR2(50) NOT NULL, /* 카드 회사 */
	K_HASH VARCHAR2(100) NOT NULL
);

/* 등록카드 */
CREATE TABLE M_CARD (
	C_ID VARCHAR2(50) NOT NULL, /* 카드 번호 */
	C_MM VARCHAR2(50) NOT NULL, /* 유효기간 월 */
	C_YY VARCHAR2(50) NOT NULL, /* 유효기간 연도 */
	C_CVC VARCHAR2(50) NOT NULL, /* CVC 번호 */
	C_COMPANY VARCHAR2(50) NOT NULL, /* 카드 회사 */
	C_HASH VARCHAR2(100) NOT NULL,
	M_ID VARCHAR2(50) /* 회원 아이디 */
);

ALTER TABLE M_CARD ADD ACCOUNT_NUMBER NUMBER NOT NULL;

COMMENT ON TABLE M_CARD IS '등록카드';

COMMENT ON COLUMN M_CARD.C_ID IS '카드 번호';

COMMENT ON COLUMN M_CARD.C_MM IS '유효기간 월';

COMMENT ON COLUMN M_CARD.C_YY IS '유효기간 연도';

COMMENT ON COLUMN M_CARD.C_CVC IS 'CVC 번호';

COMMENT ON COLUMN M_CARD.C_COMPANY IS '카드 회사';

COMMENT ON COLUMN M_CARD.M_ID IS '회원 아이디';

CREATE UNIQUE INDEX PK_M_CARD
	ON M_CARD (
		C_ID ASC
	);

ALTER TABLE M_CARD
	ADD
		CONSTRAINT PK_M_CARD
		PRIMARY KEY (
			C_ID
		);

/* 결제 */
CREATE TABLE PAYMENT (
	PAY_DATE DATE DEFAULT SYSDATE, /* 결제 일시 */
	PAY_PRICE NUMBER NOT NULL, /* 결제 금액 */
	M_ID VARCHAR2(50), /* 회원 아이디 */
	C_ID VARCHAR2(50), /* 카드 번호 */
	B_CD VARCHAR2(50) /* 가맹점 코드 */
);

COMMENT ON TABLE PAYMENT IS '결제';

COMMENT ON COLUMN PAYMENT.PAY_DATE IS '결제 일시';

COMMENT ON COLUMN PAYMENT.PAY_PRICE IS '결제 금액';

COMMENT ON COLUMN PAYMENT.M_ID IS '회원 아이디';

COMMENT ON COLUMN PAYMENT.C_ID IS '카드 번호';

COMMENT ON COLUMN PAYMENT.B_CD IS '가맹점 코드';

/* 가맹점 */
CREATE TABLE BUSINESS (
	B_CD VARCHAR2(50) NOT NULL, /* 가맹점 코드 */
	B_TYPE VARCHAR2(50) NOT NULL /* 가맹점 종류 */
);

COMMENT ON TABLE BUSINESS IS '가맹점';

COMMENT ON COLUMN BUSINESS.B_CD IS '가맹점 코드';

COMMENT ON COLUMN BUSINESS.B_TYPE IS '가맹점 종류';

CREATE UNIQUE INDEX PK_BUSINESS
	ON BUSINESS (
		B_CD ASC
	);

ALTER TABLE BUSINESS
	ADD
		CONSTRAINT PK_BUSINESS
		PRIMARY KEY (
			B_CD
		);

/* 지출 계획 */
CREATE TABLE PLAN (
	PL_ID VARCHAR2(50) NOT NULL, /* 플랜 아이디 */
	PL_UPDATE NUMBER DEFAULT 0, /* 수정 여부 */
	PL_PERIOD DATE DEFAULT SYSDATE, /* 기간 */
	M_ID VARCHAR2(50) /* 회원 아이디 */
);

COMMENT ON TABLE PLAN IS '지출 계획';

COMMENT ON COLUMN PLAN.PL_ID IS '플랜 아이디';

COMMENT ON COLUMN PLAN.PL_UPDATE IS '수정 여부';

COMMENT ON COLUMN PLAN.PL_PERIOD IS '기간';

COMMENT ON COLUMN PLAN.M_ID IS '회원 아이디';

CREATE UNIQUE INDEX PK_PLAN
	ON PLAN (
		PL_ID ASC
	);

ALTER TABLE PLAN
	ADD
		CONSTRAINT PK_PLAN
		PRIMARY KEY (
			PL_ID
		);

/* 지출 세부 계획 */
CREATE TABLE PLAN_DETAIL (
	PLD_PRICE NUMBER DEFAULT 0, /* 상한 금액 */
	PL_ID VARCHAR2(50), /* 플랜 아이디 */
	B_CD VARCHAR2(50) /* 가맹점 코드 */
);

COMMENT ON TABLE PLAN_DETAIL IS '지출 세부 계획';

COMMENT ON COLUMN PLAN_DETAIL.PLD_PRICE IS '상한 금액';

COMMENT ON COLUMN PLAN_DETAIL.PL_ID IS '플랜 아이디';

COMMENT ON COLUMN PLAN_DETAIL.B_CD IS '가맹점 코드';

ALTER TABLE M_PRODUCT
	ADD
		CONSTRAINT FK_MEMBER_TO_M_PRODUCT
		FOREIGN KEY (
			M_ID
		)
		REFERENCES MEMBER (
			M_ID
		);

ALTER TABLE M_PRODUCT
	ADD
		CONSTRAINT FK_PRODUCT_TO_M_PRODUCT
		FOREIGN KEY (
			PR_ID
		)
		REFERENCES PRODUCT (
			PR_ID
		);

ALTER TABLE M_CARD
	ADD
		CONSTRAINT FK_MEMBER_TO_M_CARD
		FOREIGN KEY (
			M_ID
		)
		REFERENCES MEMBER (
			M_ID
		);

ALTER TABLE PAYMENT
	ADD
		CONSTRAINT FK_MEMBER_TO_PAYMENT
		FOREIGN KEY (
			M_ID
		)
		REFERENCES MEMBER (
			M_ID
		);

ALTER TABLE PAYMENT
	ADD
		CONSTRAINT FK_M_CARD_TO_PAYMENT
		FOREIGN KEY (
			C_ID
		)
		REFERENCES M_CARD (
			C_ID
		);

ALTER TABLE PAYMENT
	ADD
		CONSTRAINT FK_BUSINESS_TO_PAYMENT
		FOREIGN KEY (
			B_CD
		)
		REFERENCES BUSINESS (
			B_CD
		);

ALTER TABLE PLAN
	ADD
		CONSTRAINT FK_MEMBER_TO_PLAN
		FOREIGN KEY (
			M_ID
		)
		REFERENCES MEMBER (
			M_ID
		);

ALTER TABLE PLAN_DETAIL
	ADD
		CONSTRAINT FK_PLAN_TO_PLAN_DETAIL
		FOREIGN KEY (
			PL_ID
		)
		REFERENCES PLAN (
			PL_ID
		);

ALTER TABLE PLAN_DETAIL
	ADD
		CONSTRAINT FK_BUSINESS_TO_PLAN_DETAIL
		FOREIGN KEY (
			B_CD
		)
		REFERENCES BUSINESS (
			B_CD
		);

COMMIT;